{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DocumentCamera","props","useEffect","documentAutoCaptureHTMLElement","document","getElementById","console","log","cameraOptions","id","modelUrls","modelJSON","modelBin","App","className","style","height","width","imageType","cameraFacing","photoTakenCb","image","resolution","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sMAGMA,EAAiB,SAACC,GAWtB,OAVAC,qBAAU,WACR,IAAMC,EAAiCC,SAASC,eAAe,+BAC5DF,GACDG,QAAQC,IAAIJ,GACZA,EAA+BK,cAAgBP,GAE/CK,QAAQC,IAAI,+CAIT,6CAA6BE,GAAG,iCAGnCC,EAAY,CAChBC,UAAW,yBACXC,SAAU,oCAwBGC,EArBH,WAQV,OACE,sBAAKC,UAAU,YAAYC,MAAO,CAACC,OAAQ,IAAKC,MAAO,KAAvD,UACE,yCACA,cAAC,EAAD,CACEC,UAAU,MACVC,aAAa,cACbC,aAZ2B,SAACC,EAAOC,GACvChB,QAAQC,IAAI,4BACZD,QAAQC,IAAI,CAACc,QAAOC,gBAWhBZ,UAAWA,QCzBJa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BkB,M","file":"static/js/main.2705d006.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect} from \"react\";\n\nconst DocumentCamera = (props) => {\n  useEffect(() => {\n    const documentAutoCaptureHTMLElement = document.getElementById('x-dot-document-auto-capture');\n    if(documentAutoCaptureHTMLElement){\n      console.log(documentAutoCaptureHTMLElement)\n      documentAutoCaptureHTMLElement.cameraOptions = props;\n    }else{\n      console.log(\"documentAutoCaptureHTMLElement not found\")\n    }\n  })\n\n  return <x-dot-document-auto-capture id=\"x-dot-document-auto-capture\" />;\n};\n\nconst modelUrls = {\n  modelJSON: 'blaze_model/model.json',\n  modelBin: 'blaze_model/group1-shard1of1.bin',\n};\n\nconst App = () => {\n\n  const handleDocumentPhotoTaken = (image, resolution) => {\n    console.log(\"handleDocumentPhotoTaken\")\n    console.log({image, resolution})\n  };\n\n  // @ts-ignore\n  return (\n    <div className=\"container\" style={{height: 500, width: 500}}>\n      <div>Camera</div>\n      <DocumentCamera\n        imageType=\"png\"\n        cameraFacing=\"environment\"\n        photoTakenCb={handleDocumentPhotoTaken}\n        modelUrls={modelUrls}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'dot-document-auto-capture';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}